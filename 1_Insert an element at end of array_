Question:
Given an array arr that is not completely filled and a value a, you have to insert the value at the end of the array.

Examples :

Input: arr[] = [1, 2, 3, 4, 5], val = 90
Output: [1, 2, 3, 4, 5, 90]
Explanation: After inserting 90 at the end, we have array elements as 1 2 3 4 5 90.
Input: arr[] = [1, 2, 3], val = 50
Output: [1, 2, 3, 50]
Explanation: After inserting 50 at the end, we have array elements as 1 2 3 50.
Constraints:
1 ≤ arr.size() ≤ 105
0 ≤ element, arr[i] ≤ 106

GFG Python3:

class Solution:
    def insertAtEnd(self, arr, val):
       arr.append(val)

C:

#include <stdio.h>

int main() {
    int arr[100] = {10, 20, 30, 40};
    int n = 4;
    int ele = 50;

    printf("Array before insertion:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);

    arr[n] = ele;
    n++;

    printf("\nArray after insertion:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);

    return 0;
}


