QUESTION: \
Input : 1 0 3
        0 0 4
        6 0 0
Output : Yes
There are 5 zeros. This count
is more than half of matrix
size.

Input : 1 2 3
        0 7 8
        5 0 7 
Output: No 
To check whether a matrix is a sparse matrix, we only need to check the total number of elements that are equal to zero. If this count is more than (m * n)/2, we return true. 

GFG Python3:
MAX = 100
def isSparse(array,m, n) :
    counter = 0
    for i in range(0,m) :
        for j in range(0,n) :
            if (array[i][j] == 0) :
                counter = counter + 1
    return (counter > 
            ((m * n) // 2))
array = [ [ 1, 0, 3 ],
          [ 0, 0, 4 ],
          [ 6, 0, 0 ] ]
m = 3
n = 3
if (isSparse(array, m, n)) :
    print("Yes")
else :
    print("No")


C:
#include <stdio.h>

#define MAX 100

int isSparse(int array[][MAX], int m, int n) {
    int counter = 0;

    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (array[i][j] == 0) {
                counter++;
            }
        }
    }

    return (counter > (m * n) / 2);
}

int main() {
    int array[MAX][MAX] = {
        {1, 0, 3},
        {0, 0, 4},
        {6, 0, 0}
    };
    int m = 3, n = 3;

    if (isSparse(array, m, n)) {
        printf("Yes\n");
    } else {
        printf("No\n");
    }

    return 0;
}

